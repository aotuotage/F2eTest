{"version":3,"sources":["components/Nav.js","components/pages/login.js","components/pages/register.js","components/pages/list.js","components/pages/TestList.js","components/pages/addtopic.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","state","className","to","type","Component","Login","Item","placeholder","List","TestList","openshow","list","surenum","errornum","errdatalist","alertshow","alerttext","alertshow2","alerttext2","active","gradingnum","accuracy","listnum","open","bind","choice","search","this","location","id","url","parse","query","console","log","_this","axios","methods","headers","then","response","newdata","data","map","item","setState","length","catch","error","i","newlist","Object","assign","showalert","text","setTimeout","e","undefined","target","dataset","judge","correct","errdata","title","explain","link","push","person","obj","reduce","cur","next","newerrlist","key","onClick","answer","data-id","dangerouslySetInnerHTML","__html","href","errlist","listdata","errlistfn","TextArea","Option","defaultValue","style","width","value","pagedata","reqdata","itembankTitle","describe","answerlist","rightkey","relevant","analysis","thei","forceUpdate","object","keys","property","t","onstate","it","test","onChange","inchange","theanswer","inchoice","addanswer","sureChange","sureitem","surei","rows","addanswerlist","surebtn","block","App","path","component","Register","exact","Addtopic","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8af3a7e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Icon } from 'antd';\nimport { HashRouter as Router, Link, Route } from 'react-router-dom';\n\nclass Nav extends Component{\n  constructor(props){\n    super(props);\n    this.state={}\n  }\n  render(){\n    return (\n      <div>\n        <header className=\"App-header\">\n          <h3>题海</h3><h4>admin1</h4>\n        </header>\n        <footer className=\"App-footer\">\n          <div className=\"App-nav\">\n            <Link to=\"/\">\n              <Icon className=\"nav-icon\" type=\"home\" />\n            </Link>\n            <Link to=\"/login\">\n              <Icon className=\"nav-icon\" type=\"user\" />\n            </Link>\n          </div>\n          <Link to=\"/addtopic\">\n            <Icon className=\"addlist\" type=\"plus\" />\n          </Link>\n        </footer>\n      </div>  \n    );\n  }\n}\n\nexport default Nav;","import React, { Component } from \"react\";\nimport { Input } from 'antd';\nimport { Breadcrumb } from 'antd';\nimport { Button } from 'antd';\nimport { HashRouter as Router, Link, Route } from 'react-router-dom';\n\nclass Login extends Component{\n  constructor(props){\n    super(props);\n    this.state={}\n  }\n  render(){\n    return (\n        <div className=\"login\">\n          <Breadcrumb className=\"bread\">\n            <Breadcrumb.Item>\n              <Link to=\"/register\">注册</Link>\n            </Breadcrumb.Item>\n            <Breadcrumb.Item>\n              <Link to=\"/login\">登录</Link>\n            </Breadcrumb.Item>\n          </Breadcrumb>\n          <Input placeholder=\"用户名\" />\n          <Input type=\"password\" placeholder=\"密码\" />\n          <Button className=\"login_btn\" type=\"danger\">登录</Button>\n        </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { Input } from 'antd';\nimport { Breadcrumb } from 'antd';\nimport { Button } from 'antd';\nimport { HashRouter as Router, Link, Route } from 'react-router-dom';\n\nclass Login extends Component{\n  constructor(props){\n    super(props);\n    this.state={}\n  }\n  render(){\n    return (\n        <div className=\"login\">\n          <Breadcrumb className=\"bread\">\n            <Breadcrumb.Item>\n              <Link to=\"/login\">登录</Link>\n            </Breadcrumb.Item>\n            <Breadcrumb.Item>\n              <Link to=\"/register\">注册</Link>\n            </Breadcrumb.Item>\n          </Breadcrumb>\n          <Input placeholder=\"用户名\" />\n          <Input type=\"password\" placeholder=\"密码\" />\n          <Button className=\"login_btn\" type=\"danger\">注册</Button>\n        </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { HashRouter as Router, Link, Route } from 'react-router-dom';\n\nclass List extends Component{\n  constructor(props){\n    super(props);\n    this.state={}\n  }\n  render(){\n    return (\n      <div className=\"list_surface\">\n        <div className=\"list\">\n          <Link to=\"/testlist?id=1\">\n            <p className=\"question\"><span>题库1：</span>以下href和src、link和@import的区别错误的是？</p>\n          </Link>\n          <p className=\"explain_title\"></p>\n          <p className=\"introduce\"><span>介绍：</span>以下href和src、link和@import的区别错误的是？</p>\n        </div>\n        <div className=\"list\">\n          <Link to=\"/testlist?id=2\">\n            <p className=\"question\"><span>题库1：</span>以下href和src、link和@import的区别错误的是？</p>\n          </Link>\n          <p className=\"explain_title\"></p>\n          <p className=\"introduce\"><span>介绍：</span>以下href和src、link和@import的区别错误的是？</p>\n        </div>\n        <div className=\"list\">\n          <p className=\"question\"><span>题库1：</span>以下href和src、link和@import的区别错误的是？</p>\n          <p className=\"explain_title\"></p>\n          <p className=\"introduce\"><span>介绍：</span>以下href和src、link和@import的区别错误的是？</p>\n        </div>\n        <div className=\"list\">\n          <p className=\"question\"><span>题库1：</span>以下href和src、link和@import的区别错误的是？</p>\n          <p className=\"explain_title\"></p>\n          <p className=\"introduce\"><span>介绍：</span>以下href和src、link和@import的区别错误的是？</p>\n        </div>\n      </div>  \n    );\n  }\n}\n\nexport default List;","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport { HashRouter as Router, Link, Route } from 'react-router-dom';\nimport url from 'url';\n\nexport default class TestList extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            openshow: false,\n            list:'',\n            surenum:0,\n            errornum:0,\n            errdatalist:[],\n            alertshow: false,\n            alerttext:'',\n            alertshow2:false,\n            alerttext2:'',\n            active: 1,\n            gradingnum:0,\n            accuracy:0,\n            listnum:0\n        }\n        this.open = this.open.bind(this);\n        this.choice = this.choice.bind(this);\n    }\n    componentDidMount() {\n        let search = this.props.location.search;\n        let id = url.parse(search, true).query.id;\n        console.log(id)\n        let _this = this;\n        //请求数据\n        axios({\n            methods: 'get',\n            url: `https://www.xinwanju.cn/fetest?active=${id}`,\n            headers:{\"Content-Type\":\"application/x-www-form-urlencoded\"},\n            }).then(function (response) {\n                console.log(response)\n                let newdata = response.data.map(function (item){\n                    return {...item,state:false,openshow:false}\n                })\n                _this.setState({\n                    list:newdata\n                })\n                _this.state.listnum = newdata.length;\n            })\n            .catch(function (error) {\n              console.log(error);\n            })\n    }\n    //产看答案\n    open(i){\n        if(this.state.list[i].state === true){\n            this.state.list[i].openshow = !this.state.list[i].openshow;\n            let newlist = Object.assign([],this.state.list);\n            this.setState({\n                list: newlist\n            })\n        }else{\n            this.showalert(\"大佬请先选择答案!\")\n        }\n    }\n    //正确与否提示\n    showalert(text){\n        let _this = this;\n        this.setState({\n        alerttext:text,\n        alertshow:true\n        })\n        setTimeout(function(){\n        _this.setState({\n            alerttext:'',\n            alertshow:false\n        })\n        },2000)\n    }\n    //选择答案\n    choice(e,i){\n        if(e.target.dataset.id !== undefined){\n            if(this.state.list[i].correct === e.target.dataset.id){\n                //正确答案计数\n                this.setState({\n                    surenum: this.state.surenum+=1\n                })\n                //正确提示\n                switch(this.state.surenum){\n                    case 1:\n                        this.showalert(`first blood !`)\n                        break\n                    case 2:\n                        this.showalert(`double kill !`)\n                        break \n                    case 3:\n                        this.showalert(`triple kill !`)\n                        break\n                    case 4:\n                        this.showalert(`quatary kill !`)\n                        break  \n                    case 5:\n                        this.showalert(`penta kill !`)\n                        break    \n                    case 6:\n                        this.showalert(`大佬超神了 !`)\n                        break \n                    default:\n                        this.showalert(`震惊 ! 大佬${this.state.surenum}杀了 !`)\n                        break                            \n                }\n                judge(this)\n            }else{\n                //错误答案计数\n                this.setState({\n                    errornum: this.state.errornum+=1\n                })\n                this.showalert(\"菜逼加油啊!\")\n                judge(this)\n                let errdata = {\n                    title: this.state.list[i].title,\n                    explain: this.state.list[i].explain,\n                    link: this.state.list[i].link\n                }\n                this.state.errdatalist.push(errdata);\n                let obj = {};\n                let person;\n                person = this.state.errdatalist.reduce((cur,next) => {\n                    if(obj[next.title] == undefined){\n                        obj[next.title] = true && cur.push(next)\n                    }\n                    return cur;\n                },[])\n                let newerrlist = Object.assign([],person);\n                this.setState({\n                    errdatalist: newerrlist\n                })\n            }\n            //正确率定级\n            function judge(_this){\n                if(_this.state.surenum >= 3){\n                    _this.state.accuracy = _this.state.surenum/_this.state.listnum;\n                }\n            }\n            this.state.list[i].state = true;\n            let newlist = Object.assign([],this.state.list);\n            this.setState({\n                list: newlist\n            })\n        }\n    }\n    listdata(){\n        let list;\n        if(this.state.list !== \"\"){\n            list = this.state.list.map((item,i)=>{\n                return (\n                    <div className=\"list\" key={i} onClick={(e)=>this.choice(e,i)}>\n                        <p className=\"question\"><span>{i+1}问：</span>{item.title}</p>\n                        <p className=\"answer\">答：</p>\n                        <ul className=\"answer_list\">\n                            {item.answer.map((item,i)=>{\n                                return <li data-id={i} key={i}>{item}</li>\n                            })}\n                        </ul>\n                        <div className=\"explain\">\n                            <p className=\"explain_title\" onClick={()=>this.open(i)}>答案<span className={\n                                item.openshow === true?'explain_triangle_df':'explain_triangle'\n                            }></span></p>\n                            {item.openshow  === true ?\n                                <div className=\"explain_content\">\n                                    <p dangerouslySetInnerHTML={{__html: item.explain}}></p>\n                                    <h3>相关链接：<a href={item.link}>{item.link}</a></h3>\n                                </div>\n                            : ''}\n                        </div>\n                    </div> \n                )\n            })\n        }\n        return list;\n    }\n    errlistfn(){\n        let errlist;\n        if(this.state.errdatalist.length !== 0){\n            errlist = this.state.errdatalist.map((item,i)=>{\n                return(\n                    <div key={i} className=\"err_list\">\n                        <p className=\"question\"><span>错题{i+1}：</span>{item.title}</p>\n                        <p className=\"answer_p\"><span>答案：</span>{item.explain}</p>\n                        <h3 className=\"err_relevant\">相关链接：<a href={item.link}>{item.link}</a></h3>\n                    </div>\n                )\n            })\n        }\n        return errlist;\n    }\n    render() {\n        return (\n            <>\n            <div className=\"answer_title\">{this.listdata()}</div>\n            <div className=\"errrep\">\n                <h3 className=\"errrep_title\">测试报告:\n                    <span className=\"errrep_sure\">正确次数:{this.state.surenum}</span>\n                    <span className=\"errrep_num\">错误次数:{this.state.errornum}</span>\n                    <span className=\"errrep_sure\">正确率:{this.state.accuracy}</span>\n                </h3>\n                <div>{this.errlistfn()}</div>\n            </div>\n            {\n                this.state.alertshow === true ? <div className=\"alertshow\">{this.state.alerttext}</div>: ''\n            }\n            {\n                this.state.alertshow2 === true ? <div className=\"alertshow2\">{this.state.alerttext2}</div>: ''\n            }\n            </>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Input, Select, Icon, Button } from 'antd';\nimport { HashRouter as Router, Link, Route } from 'react-router-dom';\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst selectAfter = (\n  <Select defaultValue=\"false\" className=\"select\" style={{ width: 110 }}>\n    <Option value=\"false\">错误</Option>\n    <Option value=\"true\">正确</Option>\n  </Select>\n);\n\nclass Nav extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      pagedata:{\n        alertshow: false,\n        alerttext:'',\n      },\n      reqdata:{\n        itembankTitle:'',\n        describe:'',\n        list:[\n          {\n            title: '',\n            answer:[\"1.答案输入\",\"2.答案输入\"],\n            answerlist: ['1','2'],\n            rightkey:'',\n            relevant:'',\n            analysis:''\n          },\n          {\n            title: '',\n            answer:[\"1.答案输入\",\"2.答案输入\"],\n            answerlist: ['1','2'],\n            rightkey:'',\n            relevant:'',\n            analysis:''\n          }\n        ]\n      }\n    }\n  }\n  componentDidMount(){\n  }\n  //写入答案\n  inchoice(i,thei,e){\n    this.state.reqdata.list[i].answer[thei] = e.target.value;\n    this.forceUpdate();\n  }\n  //获取key\n  getObjectKeys(object){\n    var keys = [];\n    for (var property in object){\n      keys.push(property);\n    }\n    console.log(keys)\n    return keys;\n  }\n  inchange(i,e,t){\n    let _this = this;\n    switch(t){\n      case 'itembankTitle':\n        _this.state.reqdata.itembankTitle = e.target.value\n        break;\n      case 'describe':\n        _this.state.reqdata.describe = e.target.value\n        break;\n      case 'problem':\n        _this.state.reqdata.list[i].title = e.target.value;\n        break;\n      case 'analysis':\n        _this.state.reqdata.list[i].analysis = e.target.value;\n        break;  \n      case 'relevant':\n        _this.state.reqdata.list[i].relevant = e.target.value;\n        break;  \n    }\n    this.forceUpdate();\n  }\n  //选择正确答案\n  sureChange(i,value){\n    this.state.reqdata.list[i].rightkey = value;\n    this.forceUpdate(); \n  }\n  //添加答案输入\n  addanswer(i){\n    let listnum = this.state.reqdata.list[i].answer.length + 1;\n    this.state.reqdata.list[i].answer.push(`${listnum}.答案输入`);\n    this.state.reqdata.list[i].answerlist.push(`${listnum}`);\n    this.forceUpdate(); \n  }\n  //增加问答项目\n  addanswerlist(){\n    let listnum = {\n    title: '',\n    answer:[\"1.答案输入\",\"2.答案输入\"],\n    answerlist: ['1','2'],\n    rightkey:'',\n    relevant:'',\n    analysis:''};\n    this.state.reqdata.list.push(listnum);\n    this.forceUpdate(); \n  }\n  //确认提交\n  surebtn(){\n    let onstate;\n    if(this.state.reqdata.itembankTitle == '' || this.state.reqdata.describe == ''){\n      this.showalert(\"标题或描述不能为空\");\n      onstate = false;\n    }else{\n      onstate = true;\n    }\n    this.state.reqdata.list.map((item,i)=>{\n      if(item.title == '' || item.rightkey == '' || item.analysis == ''){\n        this.showalert(\"问题，正确答案及解析不能为空\");\n        onstate = false;\n      }else{\n        item.answer.map((it)=>{\n          var patt=/.答案输入/g;\n          let seachtext = patt.test(it)\n          if(seachtext){\n            this.showalert(\"请输入问题答案\");\n            onstate = false;\n          }else{\n            onstate = true;\n          }\n        })\n      }\n    })\n    if(onstate){\n      console.log(\"通过\")\n    }\n    console.log(this.state);\n  }\n //正确与否提示\n  showalert(text){\n      let _this = this;\n      this.setState({\n      alerttext:text,\n      alertshow:true\n      })\n      setTimeout(function(){\n      _this.setState({\n          alerttext:'',\n          alertshow:false\n      })\n      },2000)\n  }\n  listdata(){\n    let list;\n    if(this.state.reqdata.list !== \"\"){\n        list = this.state.reqdata.list.map((item,i)=>{\n            return (\n              <div key={i} className=\"list\">\n                <h3 className=\"addquestion\">问题{i+1}:</h3>\n                <Input placeholder=\"问题\" onChange={(e)=>this.inchange(i,e,'problem')}/>\n                <h3 className=\"listanswer_title\">答案输入：</h3>\n                {\n                  item.answer.map((theanswer,thei)=>{\n                    return(\n                      <Input key={thei} placeholder={theanswer} onChange={(e)=>this.inchoice(i,thei,e)}/>\n                    )\n                  })\n                }\n                <Icon className=\"addanswer_icon\" onClick={(e)=>this.addanswer(i)} type=\"plus\" />\n                <div className=\"addanswer\">\n                  正确答案：\n                  <Select defaultValue='选择' onChange={(value)=> this.sureChange(i,value)} style={{ width: 110 }}>\n                    {\n                      item.answerlist.map((sureitem,surei)=>{\n                        return(\n                          <Option key={surei} className=\"select_op\" value={surei}>{sureitem}</Option>\n                        )\n                      })\n                    }\n                  </Select>\n                </div>\n                <Input placeholder=\"答案解析\"  onChange={(e)=>this.inchange(i,e,'analysis')}/>\n                <Input placeholder=\"相关链接\"  onChange={(e)=>this.inchange(i,e,'relevant')}/>\n              </div>\n            )\n        })\n    }\n    return list;\n  }\n  render(){\n    return (\n      <div className=\"addtopic\">\n        <h2>新建题库</h2>\n        <Input  onChange={(e)=>this.inchange('',e,'itembankTitle')} placeholder=\"题库标题\" />\n        <TextArea  onChange={(e)=>this.inchange('',e,'describe')} placeholder=\"题库描述\" rows={4} />\n        {this.listdata()}\n        <Icon className=\"addanswer_icon_big\" onClick={(e)=>this.addanswerlist()} type=\"plus\" />\n        <Button type=\"primary\" onClick={(e)=>this.surebtn()} className=\"surebtn\" block>\n          确认提交\n        </Button>\n        {  \n          this.state.alertshow === true ? <div className=\"alertshow\">{this.state.alerttext}</div>: ''\n        }\n      </div>  \n    );\n  }\n}\n\nexport default Nav;","import React, { Component } from \"react\";\nimport { HashRouter as Router, Link, Route } from 'react-router-dom';\nimport './App.css';\nimport 'antd/dist/antd.css'; \n//公用组件\nimport Nav from './components/Nav.js'\n//页面组件\nimport Login from './components/pages/login.js'\nimport Register from './components/pages/register.js'\nimport List from './components/pages/list.js'\nimport TestList from './components/pages/TestList.js'\nimport Addtopic from './components/pages/addtopic.js'\n\nexport default class App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  componentWillMount(){\n  }\n  render(){\n    return (\n      <Router>\n      <div className=\"App\">\n        <Nav/>\n        <Route path=\"/login\" component={Login}></Route>\n        <Route path=\"/register\" component={Register}></Route>\n        <Route path=\"/\" component={List} exact></Route>\n        <Route path=\"/testlist\" component={TestList}></Route>\n        <Route path=\"/addtopic\" component={Addtopic}></Route>\n      </div>\n      </Router>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}